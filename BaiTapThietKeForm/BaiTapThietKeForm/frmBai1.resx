<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>